{"version":3,"sources":["Services/APIService.js","Actions/ContactListActions.js","Components/Main/ContactList/ContactItem/ContactItem.js","Components/Main/ContactList/ContactList.js","Components/Sidebar/SideBar.js","Components/Main/Main.js","Components/NotFound/NotFound.js","Components/AddContact/AddContact.js","Components/EditContact/EditContact.js","Reducers/ContactListReducer.js","Reducers/RootReducer.js","store.js","index.js"],"names":["apiService","a","fetch","then","responce","json","data","List","catch","err","console","log","contact","headers","method","body","JSON","stringify","res","Id","UpdateContactList","contactList","type","payload","ContactItem","Name","Email","Phone","Status","Image","Gender","DeleteContact","SetCurrentContact","defaultStatus","img","className","id","name","htmlFor","viewBox","xmlns","src","alt","to","onClick","ContactList","props","_SetCurrentContact","bind","this","length","GetContactList","newList","slice","index","findIndex","item","splice","elem","currentContact","map","Component","mapDispatchToProps","connect","ContactListReducer","CurrentContact","SideBar","contactCounter","placeholder","Main","autoComplete","NotFound","AddContact","state","isRedirect","onGetName","e","target","value","setState","onGetPhone","phone","onGetEmail","email","onGetStatus","status","onGetGender","gender","onGetImage","image","onGetAvatar","avatar","CreateContact","preventDefault","NewContact","push","onSubmit","onChange","defaultValue","min","max","EditContact","editContact","Avatar","initialState","action","combineReducers","store","createStore","RootReducer","App","path","exact","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.95e0ba3e.chunk.js","sourcesContent":["class ContactListService {\r\n  async GetContactList() {\r\n    const List = await fetch(\"/Contact/get-all-contacts\")\r\n      .then((responce) => {\r\n        return responce.json();\r\n      })\r\n      .then((data) => {\r\n        if (data == null) {\r\n          return {\r\n            List: [],\r\n          };\r\n        } else {\r\n          return data;\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n    return List;\r\n  }\r\n\r\n  AddContact(contact) {\r\n      fetch(\"/Contact/add-contact\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(contact),\r\n    })\r\n      .then((res) => console.log(res))\r\n      .catch((res) => console.log(res));\r\n  }\r\n\r\n  EditContact(contact) {\r\n     fetch(\"/Contact/edit-contact\", {\r\n     headers: {\r\n       \"Content-Type\": \"application/json\",\r\n     },\r\n     method: \"PUT\",\r\n     body: JSON.stringify(contact),\r\n   })\r\n     .then((res) => console.log(res))\r\n     .catch((res) => console.log(res));\r\n }\r\n\r\n DeleteContact(Id) {\r\n  fetch(\"/Contact/delete-contact\", {\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  method: \"DELETE\",\r\n  body: JSON.stringify(Id),\r\n})\r\n  .then((res) => console.log(res))\r\n  .catch((res) => console.log(res));\r\n}\r\n}\r\n\r\nconst apiService = new ContactListService();\r\nexport default apiService;\r\n","export const UpdateContactList = (contactList) => {\r\n    return {\r\n        type: \"UPDATE_CONTACT_LIST\",\r\n        payload: contactList\r\n    }\r\n}\r\n\r\nexport const SetCurrentContact  = (currentContact) => {\r\n    return {\r\n        type: \"SET_CURRENT_CONTACT\",\r\n        payload: currentContact\r\n    }\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nconst ContactItem = ({ Id,Name, Email, Phone, Status, Image, Gender, DeleteContact, SetCurrentContact }) => {\r\n\r\n    let defaultStatus = \"lab lab-warning\";\r\n\r\n    switch (Status) {\r\n        case \"Work\": defaultStatus = \"lab lab-success\"; break;\r\n        case \"Private\": defaultStatus = \"lab lab-danger\"; break;\r\n        case \"Family\": defaultStatus = \"lab lab-primary\"; break;\r\n        case \"Friend\": defaultStatus = \"lab lab-warning\"; break;\r\n    }\r\n\r\n    const img = `https://api.randomuser.me/portraits/${Gender}/${Image}.jpg`;\r\n    return (\r\n        <div className=\"unit\" >\r\n            <div className=\"field name\">\r\n                <div className=\"check\">\r\n                    <input id=\"cb2\" name=\"cb1\" type=\"checkbox\" />\r\n                    <label htmlFor=\"cb2\"></label>\r\n                    <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\r\n                </div>\r\n                <div>\r\n                    <img src={img} alt=\"image\" className=\"avatar\" /> {Name}\r\n                </div>\r\n                <div className={defaultStatus} >{Status}</div>\r\n            </div>\r\n            <div className=\"field phone\">\r\n                {Phone}\r\n            </div>\r\n            <div className=\"field email\">\r\n                {Email}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <Link to=\"/edit-contact\"><i id={Id} className=\"far fa-edit fa-2x\" onClick={()=>SetCurrentContact(Id)}></i></Link>\r\n                <i className=\"far fa-trash-alt fa-2x\" onClick={()=>DeleteContact(Id)}></i>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ContactItem;","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Import API Service\r\nimport apiService from \"../../../Services/APIService\";\r\n// Import actions\r\nimport { UpdateContactList, SetCurrentContact} from \"../../../Actions/ContactListActions\";\r\nimport Contactitem from \"./ContactItem/ContactItem\";\r\n\r\n// Import components\r\nclass ContactList extends Component {\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this._SetCurrentContact = this._SetCurrentContact.bind(this); \r\n    this.DeleteContact = this.DeleteContact.bind(this);   \r\n  }\r\n  componentDidMount() {\r\n    if(this.props.ContactList.length===0)\r\n    {\r\n      apiService.GetContactList().then((contactList) => {\r\n        this.props.UpdateContactList(contactList);\r\n      });\r\n    }\r\n  }\r\n  DeleteContact(Id) {\r\n    const newList = this.props.ContactList.slice()\r\n    const index = newList.findIndex((item) => item.Id === Id);\r\n    newList.splice(index,1);\r\n    apiService.DeleteContact(Id);\r\n    this.props.UpdateContactList(newList);\r\n  }\r\n\r\n  _SetCurrentContact(Id) {\r\n    const index = this.props.ContactList.findIndex(\r\n      (elem) => elem.Id === Id\r\n    );\r\n     const currentContact = this.props.ContactList[index];\r\n     this.props.SetCurrentContact(currentContact);\r\n  }\r\n  render() {          \r\n    if (this.props.ContactList?.length > 0) {\r\n      return this.props.ContactList.map((item) => {\r\n        return (\r\n          <Contactitem\r\n            key={item.Id}\r\n            {...item}\r\n            DeleteContact={this.DeleteContact}\r\n            SetCurrentContact={this._SetCurrentContact}\r\n          />\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <section>\r\n        <p className=\"emptyList\">Contact list is empty.</p>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ ContactListReducer }) => {\r\n  const { ContactList } = ContactListReducer;\r\n  const { CurrentContact } = ContactListReducer;\r\n  return { ContactList, CurrentContact };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  UpdateContactList,\r\n  SetCurrentContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from \"react\";\r\n\r\nconst SideBar = ({ contactCounter }) => {\r\n    return (\r\n        <div className=\"col-lg-3 col-md-4 col-sm-12\">\r\n            <div className=\"contacts-labels\">\r\n                <div className=\"title\">All contacts<span>{contactCounter}</span></div>\r\n                <div className=\"list\">\r\n                    <div className=\"input-group\">\r\n                        <input type=\"text\" className=\"contacts-search\" placeholder=\"Search\" />\r\n                    </div>\r\n                    <div className=\"head\">Labels</div>\r\n                    <div className=\"unit\">\r\n                        <div className=\"lab lab-success\">Work</div><span>7</span>\r\n                    </div>\r\n                    <div className=\"unit\">\r\n                        <div className=\"lab lab-primary\">Family</div><span>8</span>\r\n                    </div>\r\n                    <div className=\"unit\">\r\n                        <div className=\"lab lab-danger\">Private</div><span>13</span>\r\n                    </div>\r\n                    <div className=\"unit\">\r\n                        <div className=\"lab lab-warning\">Friends</div><span>47</span>\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-primary font-weight-700\">Add new label</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar;","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Import components\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport SideBar from \"../Sidebar/SideBar\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container bootstrap snippets bootdeys bootdey\">\r\n        <div className=\"row decor-default\">\r\n          <SideBar />\r\n          <div className=\"col-lg-9 col-md-8 col-sm-12\">\r\n            <div className=\"contacts-list\">\r\n              <Link className=\"title\" to=\"/add-new-contact\">\r\n                Add new contact\r\n              </Link>\r\n              <form\r\n                className=\"ac-custom ac-checkbox ac-checkmark\"\r\n                autoComplete=\"off\"\r\n              >\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"contacts-list-search\"\r\n                    placeholder=\"Search\"\r\n                  />\r\n                </div>\r\n                <div className=\"unit head\">\r\n                  <div className=\"field name\">\r\n                    <div className=\"check\">\r\n                      <input id=\"cb1\" name=\"cb1\" type=\"checkbox\" />\r\n                      <label htmlFor=\"cb1\"></label>\r\n                      <svg\r\n                        viewBox=\"0 0 100 100\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      ></svg>\r\n                    </div>\r\n                    Name\r\n                  </div>\r\n                  <div className=\"field phone\">Phone</div>\r\n                </div>\r\n                <ContactList />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h2>404 Page Not Found.</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Link to=\"/\">Go to main page</Link>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import { Component, Fragment } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { UpdateContactList } from \"../../../src/Actions/ContactListActions\";\r\nimport { connect } from \"react-redux\";\r\nimport apiService from \"../../Services/APIService\"\r\n\r\nclass AddContact extends Component {\r\n\r\n    state = {\r\n        Name: \"\",\r\n        Phone: \"\",\r\n        Email: \"\",\r\n        Gender: \"\",\r\n        Status: \"\",\r\n        Image: null,\r\n        isRedirect: false\r\n    }\r\n\r\n    onGetName = (e) => {\r\n        const name = e.target.value;\r\n        this.setState({\r\n            Name: name\r\n        })\r\n    }\r\n    onGetPhone = (e) => {\r\n        const phone = e.target.value;\r\n        this.setState({\r\n            Phone: phone\r\n        })\r\n    }\r\n    onGetEmail = (e) => {\r\n        const email = e.target.value;\r\n        this.setState({\r\n            Email: email\r\n        })\r\n    }\r\n    onGetStatus = (e) => {\r\n        const status = e.target.value;\r\n        this.setState({\r\n            Status: status\r\n        })\r\n    }\r\n    onGetGender = (e) => {\r\n        const gender = e.target.value;\r\n        this.setState({\r\n            Gender: gender\r\n        })\r\n    }\r\n    onGetImage = (e) => {\r\n        const image = e.target.value;\r\n        this.setState({\r\n            Image: image\r\n        })\r\n    }\r\n    onGetAvatar = (e) => {\r\n        const avatar = e.target.value;\r\n        this.setState({\r\n            Image: avatar\r\n        })\r\n    }\r\n\r\n    CreateContact = (e) => {\r\n        e.preventDefault();\r\n        const { Name, Phone, Email, Status, Image, Gender, isRedirect } = this.state;\r\n        const NewContact = {\r\n            Name,\r\n            Phone,\r\n            Email,\r\n            Gender,\r\n            Status,\r\n            Image,\r\n        }\r\n        this.props.ContactList.push(NewContact);\r\n        this.props.UpdateContactList(this.props.ContactList);\r\n        apiService.AddContact(NewContact);\r\n        this.setState({\r\n            isRedirect: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let { Image, Gender, isRedirect } = this.state;\r\n        if (isRedirect === true) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        if (Image === \"\" || Image === null) {\r\n            Image = `https://upload.wikimedia.org/wikipedia/commons/5/50/User_icon-cp.svg`;\r\n        } else {\r\n            Image = `https://api.randomuser.me/portraits/${Gender}/${Image}.jpg`;\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                        <Link className=\"navbar-brand\" to=\"/\">Contact list</Link>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item active\">\r\n                                    <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h2>Add new contact</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-8\">\r\n                            <form onSubmit={this.CreateContact}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Name\">Name</label>\r\n                                    <input name=\"Name\" type=\"text\" className=\"form-control\" onChange={this.onGetName} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Phone\">Phone</label>\r\n                                    <input name=\"Phone\" type=\"tel\" className=\"form-control\" onChange={this.onGetPhone} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email address</label>\r\n                                    <input type=\"email\" className=\"form-control\" onChange={this.onGetEmail} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Gender\">Gender</label>\r\n                                    <select className=\"custom-select\" onChange={this.onGetGender}>\r\n                                        <option defaultValue>Choose...</option>\r\n                                        <option value=\"women\">Women</option>\r\n                                        <option value=\"men\">Men</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Status\">Status</label>\r\n                                    <select className=\"custom-select\" onChange={this.onGetStatus}>\r\n                                        <option defaultValue>Choose...</option>\r\n                                        <option value=\"Work\">Work</option>\r\n                                        <option value=\"Family\">Family</option>\r\n                                        <option value=\"Private\">Private</option>\r\n                                        <option value=\"Friend\">Friend</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Avatar\">Avatar</label>\r\n                                    <input type=\"number\" min=\"0\" max=\"99\" className=\"form-control\" onChange={this.onGetAvatar} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Add new</button>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <img src={Image} className=\"rounded avatar float-left\" alt=\"...\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = ({ContactListReducer}) => {\r\n    const {ContactList} =ContactListReducer;\r\n    return {ContactList};\r\n};\r\nconst mapDispatchToProps=\r\n{\r\n    UpdateContactList\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddContact);","import { Component, Fragment } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { UpdateContactList } from \"../../Actions/ContactListActions\";\r\nimport { connect } from \"react-redux\";\r\nimport apiService from \"../../Services/APIService\"\r\n\r\nclass EditContact extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            Id: this.props.CurrentContact.Id,\r\n            Name: this.props.CurrentContact.Name,\r\n            Phone: this.props.CurrentContact.Phone,\r\n            Email: this.props.CurrentContact.Email,\r\n            Gender: this.props.CurrentContact.Gender,\r\n            Status: this.props.CurrentContact.Status,\r\n            Image: this.props.CurrentContact.Image,\r\n            isRedirect: false\r\n        }\r\n    }\r\n    onGetName = (e) => {\r\n        const name = e.target.value;\r\n        this.setState({\r\n            Name: name\r\n        })\r\n    }\r\n    onGetPhone = (e) => {\r\n        const phone = e.target.value;\r\n        this.setState({\r\n            Phone: phone\r\n        })\r\n    }\r\n    onGetEmail = (e) => {\r\n        const email = e.target.value;\r\n        this.setState({\r\n            Email: email\r\n        })\r\n    }\r\n    onGetStatus = (e) => {\r\n        const status = e.target.value;\r\n        this.setState({\r\n            Status: status\r\n        })\r\n    }\r\n    onGetGender = (e) => {\r\n        const gender = e.target.value;\r\n        this.setState({\r\n            Gender: gender\r\n        })\r\n    }\r\n    onGetImage = (e) => {\r\n        const image = e.target.value;\r\n        this.setState({\r\n            Image: image\r\n        })\r\n    }\r\n    onGetAvatar = (e) => {\r\n        const avatar = e.target.value;\r\n\r\n        this.setState({\r\n            Image: avatar,\r\n        })\r\n    }\r\n\r\n    EditContact = (e) => {\r\n        e.preventDefault();\r\n        const { editContact } = this.props;\r\n        const { Id, Name, Phone, Email, Status, Image, Gender, isRedirect } = this.state;\r\n        const NewContact = {\r\n            Id,\r\n            Name,\r\n            Phone,\r\n            Email,\r\n            Gender,\r\n            Status,\r\n            Image,\r\n        }\r\n        const newList = this.props.ContactList.slice();\r\n        const index = newList.findIndex(elem => elem.Id === Id);\r\n        newList[index]=NewContact;\r\n        this.props.UpdateContactList(newList);\r\n        apiService.EditContact(NewContact);\r\n        this.setState({\r\n            isRedirect: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let { Name, Phone, Status, Email } = this.props.CurrentContact;\r\n\r\n        let { isRedirect, Image, Gender } = this.state;\r\n        let Avatar = Image;\r\n        if (isRedirect === true) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        if (Image === \"\" || Image === null) {\r\n            Image = `https://upload.wikimedia.org/wikipedia/commons/5/50/User_icon-cp.svg`;\r\n        } else {\r\n            Image = `https://api.randomuser.me/portraits/${Gender}/${Image}.jpg`;\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                        <Link className=\"navbar-brand\" to=\"/\">Contact list</Link>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item active\">\r\n                                    <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h2>Edit contact</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-8\">\r\n                            <form onSubmit={this.EditContact}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Name\">Name</label>\r\n                                    <input name=\"Name\" type=\"text\" defaultValue={Name} className=\"form-control\" onChange={this.onGetName} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Phone\">Phone</label>\r\n                                    <input name=\"Phone\" type=\"tel\" defaultValue={Phone} className=\"form-control\" onChange={this.onGetPhone} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email address</label>\r\n                                    <input type=\"email\" className=\"form-control\" defaultValue={Email} onChange={this.onGetEmail} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Gender\">Gender</label>\r\n                                    <select className=\"custom-select\" onChange={this.onGetGender}>\r\n                                        <option defaultValue>{Gender}</option>\r\n                                        <option value=\"women\">Women</option>\r\n                                        <option value=\"men\">Men</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Status\">Status</label>\r\n                                    <select className=\"custom-select\" onChange={this.onGetStatus}>\r\n                                        <option defaultValue>{Status}</option>\r\n                                        <option value=\"Work\">Work</option>\r\n                                        <option value=\"Family\">Family</option>\r\n                                        <option value=\"Private\">Private</option>\r\n                                        <option value=\"Friend\">Friend</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Avatar\">Avatar</label>\r\n                                    <input type=\"number\" min=\"0\" max=\"99\" defaultValue={Avatar} className=\"form-control\" onChange={this.onGetAvatar} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <img src={Image} className=\"rounded avatar float-left\" alt=\"...\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = ({ContactListReducer}) => {\r\n    const {ContactList} =ContactListReducer;\r\n    const {CurrentContact} =ContactListReducer;\r\n    return {ContactList,CurrentContact};\r\n};\r\nconst mapDispatchToProps=\r\n{\r\n    UpdateContactList\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(EditContact);","const initialState = {\r\n  ContactList: [],\r\n  CurrentContact: null,\r\n};\r\n\r\nconst ContactListReducer = (state = initialState, action) => {\r\n  console.log(\"action\", action);\r\n  switch (action.type) {\r\n    case \"UPDATE_CONTACT_LIST\":\r\n      return {\r\n        ...state,\r\n        ContactList: action.payload,\r\n      };\r\n    case \"SET_CURRENT_CONTACT\":\r\n      return {\r\n        ...state,\r\n        CurrentContact: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ContactListReducer;\r\n","import ContactListReducer from \"./ContactListReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default combineReducers({\r\n    ContactListReducer\r\n})","import { createStore } from \"redux\";\r\nimport RootReducer from \"./Reducers/RootReducer\";\r\n\r\nconst store = createStore(RootReducer);\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// Import css\r\nimport \"./index.css\";\r\n\r\n// Import components\r\nimport Main from \"./Components/Main/Main\";\r\nimport NotFound from \"./Components/NotFound/NotFound\";\r\nimport AddContact from \"./Components/AddContact/AddContact\";\r\nimport EditContact from \"./Components/EditContact/EditContact\";\r\n\r\n// Import store\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Provider store={store}>\r\n                    <Route path=\"/\" exact render={() => <Main />} />\r\n                    <Route path=\"/add-new-contact\" exact render={() => <AddContact />} />\r\n                    <Route path=\"/edit-contact\" exact render={() => <EditContact />} />\r\n                </Provider>\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}